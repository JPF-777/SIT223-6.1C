pipeline {
    agent any

    stages {
        stage('Build') {
                steps {
                    echo "Compiling and packaging the code is done by using Maven"
                }
        }
        stage('Unit & Integration Tests') {
                steps {
                    echo 'Units tests are done to ensure the code runs as expected and integration tests check to ensure different parts of the application work together as expected. This is done by using TestComplete automation software'
                }
                post {
                    failure {
                        script{
                            def jobName = env.JOB_NAME
                            def buildNumber = env.BUILD_NUMBER
                            def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
                            
                            emailext(
                                subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()} For Unit & Integration Test",
                                body: "Unit & Integration Test Failed.",                                
                                to: 'joshpeyton04@gmail.com',
                                from: 'joshpeyton04@gmail.com',
                                replyTo: 'joshpeyton04@gmail.com',
                                attachLog: true
                            )                            
                        }
                    }
                    success {
                        script{
                            def jobName = env.JOB_NAME
                            def buildNumber = env.BUILD_NUMBER
                            def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
                            
                            emailext(
                                subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()} For Unit & Integration Test",
                                body: "Unit & Integration Test Worked.",                                
                                to: 'joshpeyton04@gmail.com',
                                from: 'joshpeyton04@gmail.com',
                                replyTo: 'joshpeyton04@gmail.com',
                                attachLog: true
                            )                            
                        }
                    }
                }
        }
    	stage('Code Analysis') {
                steps {
                    echo 'Analyses code to make sure it meets industry standards. The tool used here is SonarQube'
                }
        }
        stage('Security Scan') {
                steps {
                    echo "Scans code to find any security vulnerabilities and the tool that is used is Snyk Code, for some tests, SonarQube can be used as well"
                }
                post {
                    failure {
                        script{
                            def jobName = env.JOB_NAME
                            def buildNumber = env.BUILD_NUMBER
                            def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
                            
                            emailext(
                                subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()} For Secutity Scan",
                                body: "Secutity Scan Failed.",                                
                                to: 'joshpeyton04@gmail.com',
                                from: 'joshpeyton04@gmail.com',
                                replyTo: 'joshpeyton04@gmail.com',
                                attachLog: true
                            )                            
                        }
                    }
                    success {
                        script{
                            def jobName = env.JOB_NAME
                            def buildNumber = env.BUILD_NUMBER
                            def pipelineStatus = currentBuild.result ?: 'UNKNOWN'
                            
                            emailext(
                                subject: "${jobName} - Build ${buildNumber} - ${pipelineStatus.toUpperCase()} For Secutity Scan",
                                body: "Secutity Scan Worked.",                                
                                to: 'joshpeyton04@gmail.com',
                                from: 'joshpeyton04@gmail.com',
                                replyTo: 'joshpeyton04@gmail.com',
                                attachLog: true
                            )                            
                        }
                    }
                }
        }
    	stage('Deploy To Staging') {
                steps {
                    echo "Deploys the application to a staging server with it being the AWS EC2 Instance"
                }
        }
    	stage('Integration Tests On Staging') {
                steps {
                    echo "This makes sure that the application works as expected in a production-like environment. This can be automated on either AWS CodePipeline or AWS CloudFormation"
                }
        }
    	stage('Deploy To Production') {
                steps {
                    echo "Deploys the application to a production server with it being the AWS EC2 instance"
                }
        }
    }
}
