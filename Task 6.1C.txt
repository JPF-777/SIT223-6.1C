pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo "Compiling and packaging the code is done by using Maven"
            }
        }
    	stage('Unit & Integration Tests') {
            steps {
                echo 'Unit tests are done to ensure the code runs as expected and integration tests check to ensure different parts of the application work together as expected. This is done by using TestComplete automation software'
            }
            post {
                success {
                    script {
                        def logContent = readFile(file: "build.log")
                        // Send email with build log content in body
                        mail to: "joshpeyton04@gmail.com",
                             subject: "s",
                             body: "Stage: Unit and Integration Tests using JUnit was successful! Here are the build logs:\n\n${logContent}"
                    }
                }
                failure {
                    script {
                        def logContent = readFile(file: "${env.BUILD_LOG_PATH}")
                        // Send email with build log content in body
                        mail to: "joshpeyton04@gmail.com",
                             subject: "f",
                             body: "Stage: Unit and Integration Tests using JUnit was unsuccessful! Debug the code and fix the errors before building again. Here are the build logs:\n\nLog Entries\n-----------------\n${logContent}"
                    }
                }
            }
        }
	    stage('Code Analysis') {
            steps {
                echo 'Analyses code to make sure it meets industry standards. The tool used here is SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo "Scans code to find any security vulnerabilities and the tool that is used is Snyk Code, for some tests, SonarQube can be used as well"
            }
            post{
                success{
                    mail to: "joshpeyton04@gmail.com",
                    subject: "Security Scan Test Results",
                    body: "Security scan tests are successful, logs are \n ${env.RUN_DISPLAY_URL}\n"
                }
                failure{
                    mail to: "joshpeyton04@gmail.com",
                    subject: "Security Scan Test Results",
                    body: "Security scan tests are successful, logs are \n ${env.RUN_DISPLAY_URL}\n"
                }
            }
        }
	    stage('Deploy To Staging') {
            steps {
                echo "Deploys the application to a staging server with it being the AWS EC2 Instance"
            }
        }
	    stage('Integration Tests On Staging') {
            steps {
                echo "This makes sure that the application works as expected in a production-like environment. This can be automated on either AWS CodePipeline or AWS CloudFormation"
            }
        }
	    stage('Deploy To Production') {
            steps {
                echo "Deploys the application to a production server with it being the AWS EC2 instance"
            }
        }
    }
}
